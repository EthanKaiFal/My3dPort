/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useAnimations, useGLTF, useFBX } from '@react-three/drei'

export const Me = ({animationName= 'idle', ...props}) => {
    const group = useRef();
  const { nodes, materials } = useGLTF('/models/me.glb')
  const {animations: idleAnimation} = useFBX('/models/animations/idle.fbx');
  const {animations: clappingAnimation} = useFBX('/models/animations/clapping.fbx');
  const {animations: victoryAnimation} = useFBX('/models/animations/victory.fbx');
  const {animations: saluteAnimation} = useFBX('/models/animations/salute.fbx');
  idleAnimation[0].name = 'idle';
  clappingAnimation[0].name = 'clapping';
  victoryAnimation[0].name = 'victory';
  saluteAnimation[0].name = 'salute';
  const {actions} = useAnimations([idleAnimation[0],clappingAnimation[0],victoryAnimation[0],saluteAnimation[0]], group);
  useEffect(() => {
    actions[animationName].reset().fadeIn(0.5).play();
    // return() => actions[animationName].fadeOut(0.5);
  },[animationName])
  return (
    <group {...props} ref={group} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="Wolf3D_Avatar"
        geometry={nodes.Wolf3D_Avatar.geometry}
        material={materials.Wolf3D_Avatar}
        skeleton={nodes.Wolf3D_Avatar.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences}
      />
    </group>
  )
}

useGLTF.preload('/models/me.glb')
