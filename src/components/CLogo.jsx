/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: AnshiNoWara (https://sketchfab.com/AnshiNoWara)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/c-e3a5d3e564a64fb0ab39665f44632520
Title: C#
*/

import React, { useRef, useState } from 'react'
import { Float, useGLTF } from '@react-three/drei'
import { useGSAP } from '@gsap/react';
import gsap from 'gsap';

export const CLogo = (props) => {
  const { nodes, materials } = useGLTF('/models/C_logo.glb')
  const CRef = useRef();
  const [hovered, setHovered] = useState(false);
  useGSAP(()=> {
    gsap
      .timeline( {
        repeat: -1,
        repeatDelay:3,
      })
      .to(CRef.current.rotation, {
        y: hovered ? '+=2' : `+=${Math.PI * 2}`,
        x: hovered ? '+=2' : `-=${Math.PI * 2}`,
        duration: 2.5,
        stagger: {
          each:0.5,
        },
      });
  });
  return (
   <Float speed={4} floatIntensity={3} rotationIntensity={0.1}>
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <mesh
          ref={CRef}
          castShadow
          receiveShadow
          geometry={nodes['C#_C#_0'].geometry}
          material={materials.material}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          onPointerEnter={() => setHovered(true)}
        />
      </group>
    </group>
    </Float>
  )
}

useGLTF.preload('/models/C_logo.glb')